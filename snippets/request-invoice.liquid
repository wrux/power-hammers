{% comment %} {% if product.metafields.custom.disable_buy == true %}
  {{ 'request-invoice.css' | asset_url | stylesheet_tag }}

  {%- form 'contact',
      id: 'requestInvoice',
      return_to: "{{ product.url }}#requestInvoice",
      class: 'request-invoice-form'
  -%}
    <h3><strong>Request an invoice</strong></h3>

    <p>If you need to request an invoice for your accounting requirements, please use this form below.</p>

    <!-- Capture product name -->
    <input type="hidden" name="contact[product]" value="{{ product.title }}">

    <label for="your-email">Your email:</label>
    <input id="your-email"
           name="contact[email]"
           type="email"
           placeholder="Your email"
           required
           class="input input--text input--full">

    <button type="submit" class="product-form__submit button button--full-width button--secondary">
      Request an invoice
    </button>
  {%- endform -%}

  {% if form.posted_successfully? %}
    <p id="requestInvoiceMessage" class="request-invoice-success">
      ✅ Your invoice request has been sent. We’ll get back to you shortly.
    </p>
  {% elsif form.errors %}
    <p id="requestInvoiceMessage" class="request-invoice-error">
      ⚠️ There was an error submitting your request. Please try again.
    </p>
  {% endif %}
{% endif %} {% endcomment %}


<style>
  .request-invoice-title {
    font-size: 2rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--color-foreground, #000);
  }

  .request-invoice-description {
    margin-bottom: 2rem;
    color: var(--color-foreground-75, #666);
    line-height: 1.6;
  }

  .request-invoice-form {
    max-width: 500px;
  }

  .request-invoice-field {
    margin-bottom: 1.5rem;
  }

  .request-invoice-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: var(--color-foreground, #000);
  }

  .request-invoice-input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--color-border, #ddd);
    border-radius: 0.375rem;
    font-size: 1rem;
    background-color: var(--color-background, #fff);
    color: var(--color-foreground, #000);
    transition: border-color 0.2s ease;
  }

  .request-invoice-input:focus {
    outline: none;
    border-color: var(--color-accent, #007bff);
    box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.1);
  }

  .request-invoice-button {
    background-color: var(--color-button-primary, #007bff);
    color: var(--color-button-primary-text, #fff);
    border: none;
    padding: 0.875rem 1.5rem;
    border-radius: 0.375rem;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 150px;
  }

  .request-invoice-button:hover:not(:disabled) {
    background-color: var(--color-button-primary-hover, #0056b3);
  }

  .request-invoice-button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }

  .request-invoice-button-text {
    display: inline;
  }

  .request-invoice-spinner {
    width: 20px;
    height: 20px;
    animation: request-invoice-spin 1s linear infinite;
    margin-left: 0.5rem;
  }

  .request-invoice-spinner.hidden {
    display: none;
  }

  .request-invoice-message {
    margin-top: 1rem;
    padding: 0.75rem;
    border-radius: 0.375rem;
    font-weight: 500;
  }

  .request-invoice-message--success {
    color: #059669;
    background-color: #ecfdf5;
    border: 1px solid #a7f3d0;
  }

  .request-invoice-message--error {
    color: #dc2626;
    background-color: #fef2f2;
    border: 1px solid #fecaca;
  }

  @keyframes request-invoice-spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
</style>

<div id="hubspot-request-invoice-form">
  <div class="request-invoice-content">
    <h2 class="title title--primary">Request an invoice</h2>
    <p class="request-invoice-description">
      If you need to request an invoice for your accounting requirements, please
      use this form below.
    </p>
  </div>

  <form id="invoiceForm" class="request-invoice-form">
    <input type="hidden" name="hidden_field" value="{{ product.title }}" />

    <div class="request-invoice-field">
      <label class="request-invoice-label" for="invoice-firstname"
        >First Name</label
      >
      <input
        class="request-invoice-input"
        type="text"
        name="firstname"
        id="invoice-firstname"
        required
      />
    </div>

    <div class="request-invoice-field">
      <label class="request-invoice-label" for="invoice-lastname"
        >Last Name</label
      >
      <input
        class="request-invoice-input"
        type="text"
        name="lastname"
        id="invoice-lastname"
        required
      />
    </div>

    <div class="request-invoice-field">
      <label class="request-invoice-label" for="invoice-email">Email</label>
      <input
        class="request-invoice-input"
        type="email"
        name="email"
        id="invoice-email"
        required
      />
    </div>

    <div class="request-invoice-field">
      <label class="request-invoice-label" for="invoice-phone"
        >Phone Number</label
      >
      <input
        class="request-invoice-input"
        type="text"
        name="phone"
        id="invoice-phone"
        required
      />
    </div>

    <button type="submit" id="invoice-submit" class="request-invoice-button">
      <span class="request-invoice-button-text">Request an invoice</span>
      <svg
        id="loadingSpinner"
        class="request-invoice-spinner hidden"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
      >
        <circle
          class="opacity-25"
          cx="12"
          cy="12"
          r="10"
          stroke="currentColor"
          stroke-width="4"
        ></circle>
        <path
          class="opacity-75"
          fill="currentColor"
          d="M4 12a8 8 0 018-8v8z"
        ></path>
      </svg>
    </button>
  </form>

  <p id="formMessage" class="request-invoice-message"></p>
</div>

<script>
  document
    .getElementById("invoiceForm")
    .addEventListener("submit", async function (e) {
      e.preventDefault();

      const submitBtn = document.getElementById("invoice-submit");
      const spinner = document.getElementById("loadingSpinner");
      const buttonText = submitBtn.querySelector(
        ".request-invoice-button-text"
      );
      const formMessage = document.getElementById("formMessage");

      // Show loading state
      submitBtn.disabled = true;
      spinner.classList.remove("hidden");
      buttonText.style.display = "none";
      formMessage.textContent = "";
      formMessage.className = "request-invoice-message";

      // Gather form data in HubSpot expected format
      const formData = new FormData();
      formData.append(
        "hidden_field",
        document.querySelector('input[name="hidden_field"]').value
      );
      formData.append(
        "firstname",
        document.getElementById("invoice-firstname").value
      );
      formData.append(
        "lastname",
        document.getElementById("invoice-lastname").value
      );
      formData.append("email", document.getElementById("invoice-email").value);
      formData.append("phone", document.getElementById("invoice-phone").value);

      try {
        const response = await fetch(
          "https://forms.hubspot.com/uploads/form/v2/146360371/ecc249b0-b8df-46b2-8a84-0485f91c5eee",
          {
            method: "POST",
            body: formData,
          }
        );

        if (response.ok) {
          formMessage.textContent = "Thanks! Your request has been submitted.";
          formMessage.classList.add("request-invoice-message--success");
          document.getElementById("invoiceForm").reset();
        } else {
          throw new Error("Form submission failed");
        }
      } catch (error) {
        formMessage.textContent =
          "Oops! Something went wrong. Please try again.";
        formMessage.classList.add("request-invoice-message--error");
      } finally {
        // Reset loading state
        submitBtn.disabled = false;
        spinner.classList.add("hidden");
        buttonText.style.display = "inline";
      }
    });
</script>
