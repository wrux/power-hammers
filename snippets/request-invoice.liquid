{% comment %} {% if product.metafields.custom.disable_buy == true %}
  {{ 'request-invoice.css' | asset_url | stylesheet_tag }}

  {%- form 'contact',
      id: 'requestInvoice',
      return_to: "{{ product.url }}#requestInvoice",
      class: 'request-invoice-form'
  -%}
    <h3><strong>Request an invoice</strong></h3>

    <p>If you need to request an invoice for your accounting requirements, please use this form below.</p>

    <!-- Capture product name -->
    <input type="hidden" name="contact[product]" value="{{ product.title }}">

    <label for="your-email">Your email:</label>
    <input id="your-email"
           name="contact[email]"
           type="email"
           placeholder="Your email"
           required
           class="input input--text input--full">

    <button type="submit" class="product-form__submit button button--full-width button--secondary">
      Request an invoice
    </button>
  {%- endform -%}

  {% if form.posted_successfully? %}
    <p id="requestInvoiceMessage" class="request-invoice-success">
      ✅ Your invoice request has been sent. We’ll get back to you shortly.
    </p>
  {% elsif form.errors %}
    <p id="requestInvoiceMessage" class="request-invoice-error">
      ⚠️ There was an error submitting your request. Please try again.
    </p>
  {% endif %}
{% endif %} {% endcomment %}


<div style="padding: 2rem; background: red;">
<script src="https://js-eu1.hsforms.net/forms/embed/146360371.js" defer></script>
<div class="hs-form-frame" data-region="eu1" data-form-id="09167456-606a-4c5d-a74a-c039bed0d71b" data-portal-id="146360371"></div>
</div>


<div id="hubspot-request-invoice-form" class="form-container">
  <h3><strong>Request an invoice</strong></h3>
  <p>If you need to request an invoice for your accounting requirements, please use this form below.</p>

  <form id="invoiceForm" class="form">
    <input type="hidden" name="product" value="{{ product.title }}">

    <div class="form-group">
      <label for="invoice-firstname">First Name</label>
      <input class="input input--text input--full" type="text" name="firstname" id="invoice-firstname" required>
    </div>

    <div class="form-group">
      <label for="invoice-lastname">Last Name</label>
      <input class="input input--text input--full" type="text" name="lastname" id="invoice-lastname" required>
    </div>

    <div class="form-group">
      <label for="invoice-email">Email</label>
      <input class="input input--text input--full" type="email" name="email" id="invoice-email" required>
    </div>

    <div class="form-group">
      <label for="invoice-message">Message</label>
      <textarea name="message" id="invoice-message" rows="4"></textarea>
    </div>

    <button type="submit" id="invoice-submit" class="product-form__submit button button--full-width button--secondary">
      Request an invoice

      <svg id="loadingSpinner" class="loading-spinner" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v8z"></path>
      </svg>
    </button>
  </form>

  <p id="formMessage" class="form-message"></p>
</div>

<script>
document.getElementById('invoiceForm').addEventListener('submit', async function(e) {
  e.preventDefault();

  const submitBtn = document.getElementById('submitBtn');
  const spinner = document.getElementById('loadingSpinner');
  const formMessage = document.getElementById('formMessage');

  // Show loading state
  submitBtn.disabled = true;
  spinner.classList.remove('hidden');
  formMessage.textContent = '';

  // Gather form data
  const formData = {
    fields: [
      { name: 'product', value: document.querySelector('input[name="product"]').value },
      { name: 'firstname', value: document.getElementById('firstname').value },
      { name: 'lastname', value: document.getElementById('lastname').value },
      { name: 'email', value: document.getElementById('email').value },
      { name: 'message', value: document.getElementById('message').value }
    ]
  };

  try {
    const response = await fetch('https://forms.hubspot.com/uploads/form/v2/146360371/ecc249b0-b8df-46b2-8a84-0485f91c5eee', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(formData)
    });

    if (response.ok) {
      formMessage.textContent = 'Thanks! Your request has been submitted.';
      formMessage.classList.add('success-message');
      document.getElementById('invoiceForm').reset();
    } else {
      throw new Error('Form submission failed');
    }
  } catch (error) {
    formMessage.textContent = 'Oops! Something went wrong. Please try again.';
    formMessage.classList.add('error-message');
  } finally {
    // Reset loading state
    submitBtn.disabled = false;
    spinner.classList.add('hidden');
  }
});
</script>








